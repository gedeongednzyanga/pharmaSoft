<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>